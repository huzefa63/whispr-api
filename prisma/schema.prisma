// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  
}

model User {
  id Int @id @default(autoincrement())
  name String @db.VarChar(40)
  email String @unique
  contactNumber String @unique
  password String
  profileImage String?
  user Chat[] @relation("user")
  friend Chat[] @relation("user2")
  messagesSent Message[] @relation("messagesSent")
  messagesReceived Message[] @relation("messagesReceived")
}

model Chat {
  id Int @id @default(autoincrement())
  user User @relation("user",fields: [userId] , references: [id])
  userId Int
  user2 User @relation("user2",fields: [user2Id] , references: [id])
  user2Id Int 
  recentMessage String?
  recentMessageSenderId Int?
  isRecentMessageRead Boolean @default(false)
}

model Message {
  id Int @id @default(autoincrement())
  sender User @relation("messagesSent",fields: [senderId] , references: [id])
  senderId Int
  reciever User @relation("messagesReceived",fields: [recieverId] , references: [id])
  recieverId Int
  time DateTime @default(now())
  isRead Boolean @default(false)
  message String?
  mediaUrl String?
  caption String?
  Type String?
}